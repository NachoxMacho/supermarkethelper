networks:
  main:
    driver: bridge

services:
  supermarkethelper:
    build:
      dockerfile: ./Dockerfile
    container_name: supermarkethelper
    volumes:
      - ./products.sqlite.db:/app/products.sqlite.db
    develop:
      watch:
        - action: rebuild
          path: ./
          ignore:
            - "sqlite.db"
    ports:
      - 42069:42069
    environment:
      REDIS_URL: redis://redis:6379
      DB_DRIVER: sqlite
      # Make sure this is the full path to the sqlite fil
      DB_PATH: /app/products.sqlite.db
      OTEL_ENDPOINT: http://tempo:4318
      PYROSCOPE_ENDPOINT: http://pyroscope:4040
    networks:
      - main
    depends_on:
      - redis
  redis:
    image: redis:latest
    ports:
      - ${REDIS_PORT:-6379}:6379
    expose:
      - 6379
    networks:
      - main
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    command:
      - --config.file=/etc/prometheus.yaml
      - --web.enable-remote-write-receiver
      - --enable-feature=exemplar-storage
      - --enable-feature=native-histograms
    volumes:
      - ./prometheus.yaml:/etc/prometheus.yaml
    ports:
      - "9090:9090"
    networks:
      - main
  grafana:
    image: grafana/grafana:11.2.0
    container_name: grafana
    volumes:
      - ./grafana-datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_FEATURE_TOGGLES_ENABLE=traceqlEditor metricsSummary
      - GF_INSTALL_PLUGINS=grafana-pyroscope-app
    ports:
      - "3000:3000"
    networks:
      - main
  pyroscope:
    image: grafana/pyroscope
    container_name: pyroscope
    ports:
      - 4040:4040
    networks:
      - main
  # Tempo runs as user 10001, and docker compose creates the volume as root.
  # As such, we need to chown the volume in order for Tempo to start correctly.
  init:
    image: &tempoImage grafana/tempo:latest
    user: root
    entrypoint:
      - "chown"
      - "10001:10001"
      - "/var/tempo"
    volumes:
      - ./tempo-data:/var/tempo
    networks:
      - main

  memcached:
    image: memcached:1.6.29
    container_name: memcached
    ports:
      - "11211:11211"
    environment:
      - MEMCACHED_MAX_MEMORY=64m  # Set the maximum memory usage
      - MEMCACHED_THREADS=4       # Number of threads to use
    networks:
      - main

  tempo:
    image: *tempoImage
    container_name: tempo
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ./tempo.yaml:/etc/tempo.yaml
      - ./tempo-data:/var/tempo
    ports:
      - "14268:14268"  # jaeger ingest
      - "3200:3200"   # tempo
      - "9095:9095" # tempo grpc
      - "4317:4317"  # otlp grpc
      - "4318:4318"  # otlp http
      - "9411:9411"   # zipkin
    depends_on:
      - init
      - memcached
    networks:
      - main

